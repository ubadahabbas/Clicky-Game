{"version":3,"sources":["components/header/index.js","components/jumbotron/index.js","components/image/index.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","class","score","topScore","Jumbotron","href","role","React","Component","Image","id","onClick","imageClick","Object","defineProperty","src","url","alt","name","Footer","App","state","images","incrementScore","_this","setState","console","log","resetScore","i","length","resetState","shuffle","array","j","Math","floor","random","_ref","header","this","jumbotron","components_image","image","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e709ff4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Header (props){\n        return (\n         \n            <nav class=\"navbar navbar-light bg-light sticky-top\">\n                <h4>{ }</h4>\n                <h4> Score: {props.score}</h4>\n                <h4>|</h4>\n                <h4> Top Score: {props.topScore}</h4>\n                <h4>{ }</h4>\n            </nav>\n     \n        );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nclass Jumbotron extends React.Component {\n    render() {\n        return (\n            <div class=\"jumbotron text-center\">\n                <h1 class=\"display-4 \">Clicky Game!</h1>\n                <hr class=\"my-4\"></hr>\n                <h5>Click on an image to earn points, but don't click on any more than once!.</h5>\n                <hr></hr>\n                <a class=\"btn btn-primary btn-lg\" href=\"https://ubadahatta.github.io/\" role=\"button\">Developer's Portfolio</a>\n            </div>\n        );\n    }\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Image(props) {\n    return (\n        <div class=\"col-md-3\">\n            <div class=\"text-center rounded\" id=\"image-div\" onClick={() => props.imageClick(props.id)}>\n                <img src={props.url} class=\"rounded\" alt={props.name} class=\"click-item\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Image;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer (){\n    return (\n        <div>\n<br></br>\n        <footer class=\"footer\">\n        <div class=\"bottom text-center\"> GW Coding Bootcamp.\n        </div>\n        <br></br>\n        </footer>\n        </div>\n    )\n\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/header\"\nimport Jumbotron from \"./components/jumbotron\"\nimport images from \"./images.json\";\nimport Image from \"./components/image\"\nimport Footer from \"./components/footer\"\n\nclass App extends Component {\n\n  state = {\n    images: images,\n    score: 0,\n    topScore: 0\n  };\n\n  incrementScore = () => {\n  \n    this.setState({ score: this.state.score + 1 })\n\n    if (this.state.score +1> this.state.topScore) {\n      this.setState({topScore: this.state.score + 1})\n      console.log(this.state.score)\n    }\n  };\n\n  resetScore = () => {\n    this.setState({ score: 0 })\n  };\n\n  \n  imageClick = id => {\n    console.log(id)\n    console.log(this.state.images)\n    for (var i = 0; i < this.state.images.length; i++) {\n      if (this.state.images[i].id == id) {\n        if (this.state.images[i].state == 0) {\n          this.state.images[i].state = 1;\n          this.incrementScore();\n        }\n        else {\n          this.resetScore();\n           this.resetState();\n        }\n      }\n    }\n    this.shuffle(this.state.images);\n  };\n\n  shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    this.setState({ images: array })\n    console.log(this.state.images)\n  }\n\n  resetState=()=>{\n    for (var i = 0; i < this.state.images.length; i++){\n      this.state.images[i].state = 0;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header score={this.state.score} topScore={this.state.topScore} />\n        <Jumbotron />\n        <main class=\"container\">\n          <div class=\"row\">\n            <Image url={this.state.images[0].image} name={this.state.images[0].name} imageClick={this.imageClick} id={this.state.images[0].id} />\n            <Image url={this.state.images[1].image} name={this.state.images[1].name} imageClick={this.imageClick} id={this.state.images[1].id} />\n            <Image url={this.state.images[2].image} name={this.state.images[2].name} imageClick={this.imageClick} id={this.state.images[2].id} />\n            <Image url={this.state.images[3].image} name={this.state.images[3].name} imageClick={this.imageClick} id={this.state.images[3].id} />\n          </div>\n          <br />\n          <div class=\"row\">\n            <Image url={this.state.images[4].image} name={this.state.images[4].name} imageClick={this.imageClick} id={this.state.images[4].id} />\n            <Image url={this.state.images[5].image} name={this.state.images[5].name} imageClick={this.imageClick} id={this.state.images[5].id} />\n            <Image url={this.state.images[6].image} name={this.state.images[6].name} imageClick={this.imageClick} id={this.state.images[6].id} />\n            <Image url={this.state.images[7].image} name={this.state.images[7].name} imageClick={this.imageClick} id={this.state.images[7].id} />\n          </div>\n          <br />\n          <div class=\"row\">\n          <Image url={this.state.images[8].image} name={this.state.images[8].name} imageClick={this.imageClick} id={this.state.images[8].id} />\n            <Image url={this.state.images[9].image} name={this.state.images[9].name} imageClick={this.imageClick} id={this.state.images[9].id} />\n            <Image url={this.state.images[10].image} name={this.state.images[10].name} imageClick={this.imageClick} id={this.state.images[10].id} />\n            <Image url={this.state.images[11].image} name={this.state.images[11].name} imageClick={this.imageClick} id={this.state.images[11].id} />\n          </div>\n        </main>\n<Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}